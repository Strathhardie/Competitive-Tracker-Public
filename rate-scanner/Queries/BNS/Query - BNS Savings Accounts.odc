<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/x-ms-odc; charset=utf-8">
<meta name=ProgId content=ODC.Database>
<meta name=SourceType content=OLEDB>
<title>Query - BNS Savings Accounts</title>
<xml id=docprops><o:DocumentProperties
  xmlns:o="urn:schemas-microsoft-com:office:office"
  xmlns="http://www.w3.org/TR/REC-html40">
  <o:Description>Connection to the 'BNS Savings Accounts' query in the workbook.</o:Description>
  <o:Name>Query - BNS Savings Accounts</o:Name>
 </o:DocumentProperties>
</xml><xml id=msodc><odc:OfficeDataConnection
  xmlns:odc="urn:schemas-microsoft-com:office:odc"
  xmlns="http://www.w3.org/TR/REC-html40">
  <odc:PowerQueryConnection odc:Type="OLEDB">
   <odc:ConnectionString>Provider=Microsoft.Mashup.OleDb.1;Data Source=$Workbook$;Location=&quot;BNS Savings Accounts&quot;;Extended Properties=&quot;&quot;</odc:ConnectionString>
   <odc:CommandType>SQL</odc:CommandType>
   <odc:CommandText>SELECT * FROM [BNS Savings Accounts]</odc:CommandText>
  </odc:PowerQueryConnection>
  <odc:PowerQueryMashupData>&lt;Mashup xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns=&quot;http://schemas.microsoft.com/DataMashup&quot;&gt;&lt;Client&gt;EXCEL&lt;/Client&gt;&lt;Version&gt;2.72.5556.441&lt;/Version&gt;&lt;MinVersion&gt;2.21.0.0&lt;/MinVersion&gt;&lt;Culture&gt;en-US&lt;/Culture&gt;&lt;SafeCombine&gt;true&lt;/SafeCombine&gt;&lt;Items&gt;&lt;Query Name=&quot;BNS Savings Accounts&quot;&gt;&lt;Formula&gt;&lt;![CDATA[let&#13;&#10;    Source = Web.Page(Web.Contents(&quot;https://www.scotiabank.com/ca/en/personal/rates-prices/savings-account-rates.html&quot;)),&#13;&#10;    #&quot;Expanded Data&quot; = Table.ExpandTableColumn(Source, &quot;Data&quot;, {&quot;The longer you save, the more interest you can earn&quot;, &quot;Regular Interest Rate*&quot;, &quot;Premium Interest Rate&#160;††&quot;, &quot;Total Annual Interest Rate&quot;, &quot;For Preferred Package#(lf)#(lf) Customers Interest Rate Boost in addition to Regular Interest Rate4&quot;, &quot;For Preferred Package#(lf)#(lf) Customers Total Annual Interest Rate&quot;, &quot;For Ultimate Package#(lf)#(lf) Customers Interest Rate Boost in addition to Regular Interest Rate5&quot;, &quot;For Ultimate Package#(lf)#(lf) Customers Total Annual Interest Rate&quot;, &quot;Higher rate will be paid on the entire balance if the balance exceeds $5,000&quot;, &quot;Regular Interest Rate&quot;, &quot;Momentum Savings Premium‡&quot;, &quot;Annual interest rate is paid on the entire  balance based on the tier within which the  daily account closing balance falls&quot;, &quot;Annual Interest Rate*&quot;, &quot;Highest rate will be paid on the entire balance  as it increases.&quot;, &quot;Paid on the portion of the balance within each tier&quot;, &quot;Paid on the entire balance  if balance exceeds $5,000&quot;, &quot;Paid on the entire balance  if balance exceeds $25,000&quot;, &quot;Annual Interest Rate*†&quot;, &quot;Annual Interest Rate on account with balances:*&quot;, &quot;Annual Interest Rate (2)&quot;, &quot;Rate will be paid on entire balance&quot;, &quot;Annual Interest Rate (3)&quot;, &quot;Kind&quot;, &quot;Name&quot;, &quot;Children&quot;, &quot;Text&quot;}, {&quot;Data.The longer you save, the more interest you can earn&quot;, &quot;Data.Regular Interest Rate*&quot;, &quot;Data.Premium Interest Rate&quot;, &quot;Data.Total Annual Interest Rate&quot;, &quot;Data.For Preferred Package#(lf)#(lf) Customers Interest Rate Boost in addition to Regula&quot;, &quot;Data.For Preferred Package#(lf)#(lf) Customers Total Annual Interest Rate&quot;, &quot;Data.For Ultimate Package#(lf)#(lf) Customers Interest Rate Boost in addition to Regular&quot;, &quot;Data.For Ultimate Package#(lf)#(lf) Customers Total Annual Interest Rate&quot;, &quot;Data.Higher rate will be paid on the entire balance if the balance exceeds $5,00&quot;, &quot;Data.Regular Interest Rate&quot;, &quot;Data.Momentum Savings Premium‡&quot;, &quot;Data.Annual interest rate is paid on the entire  balance based on the tier withi&quot;, &quot;Data.Annual Interest Rate*&quot;, &quot;Data.Highest rate will be paid on the entire balance  as it increases.&quot;, &quot;Data.Paid on the portion of the balance within each tier&quot;, &quot;Data.Paid on the entire balance  if balance exceeds $5,000&quot;, &quot;Data.Paid on the entire balance  if balance exceeds $25,000&quot;, &quot;Data.Annual Interest Rate*†&quot;, &quot;Data.Annual Interest Rate on account with balances:*&quot;, &quot;Data.Annual Interest Rate (2)&quot;, &quot;Data.Rate will be paid on entire balance&quot;, &quot;Data.Annual Interest Rate (3)&quot;, &quot;Data.Kind&quot;, &quot;Data.Name&quot;, &quot;Data.Children&quot;, &quot;Data.Text&quot;}),&#13;&#10;    #&quot;Removed Columns&quot; = Table.RemoveColumns(#&quot;Expanded Data&quot;,{&quot;Caption&quot;, &quot;Source&quot;, &quot;ClassName&quot;, &quot;Id&quot;, &quot;Data.For Preferred Package#(lf)#(lf) Customers Interest Rate Boost in addition to Regula&quot;, &quot;Data.For Preferred Package#(lf)#(lf) Customers Total Annual Interest Rate&quot;, &quot;Data.For Ultimate Package#(lf)#(lf) Customers Interest Rate Boost in addition to Regular&quot;, &quot;Data.For Ultimate Package#(lf)#(lf) Customers Total Annual Interest Rate&quot;}),&#13;&#10;    #&quot;Merged Columns&quot; = Table.CombineColumns(#&quot;Removed Columns&quot;,{&quot;Data.The longer you save, the more interest you can earn&quot;, &quot;Data.Higher rate will be paid on the entire balance if the balance exceeds $5,00&quot;, &quot;Data.Annual interest rate is paid on the entire  balance based on the tier withi&quot;, &quot;Data.Highest rate will be paid on the entire balance  as it increases.&quot;, &quot;Data.Paid on the portion of the balance within each tier&quot;, &quot;Data.Paid on the entire balance  if balance exceeds $5,000&quot;, &quot;Data.Paid on the entire balance  if balance exceeds $25,000&quot;, &quot;Data.Annual Interest Rate on account with balances:*&quot;, &quot;Data.Rate will be paid on entire balance&quot;},Combiner.CombineTextByDelimiter(&quot;&quot;, QuoteStyle.None),&quot;Account Balance&quot;),&#13;&#10;    #&quot;Merged Columns1&quot; = Table.CombineColumns(#&quot;Merged Columns&quot;,{&quot;Data.Regular Interest Rate*&quot;, &quot;Data.Regular Interest Rate&quot;},Combiner.CombineTextByDelimiter(&quot;&quot;, QuoteStyle.None),&quot;Regular Interest Rate&quot;),&#13;&#10;    #&quot;Merged Columns2&quot; = Table.CombineColumns(#&quot;Merged Columns1&quot;,{&quot;Data.Momentum Savings Premium‡&quot;, &quot;Data.Premium Interest Rate&quot;},Combiner.CombineTextByDelimiter(&quot;&quot;, QuoteStyle.None),&quot;Premium Interest Rate&quot;),&#13;&#10;    #&quot;Merged Columns3&quot; = Table.CombineColumns(#&quot;Merged Columns2&quot;,{&quot;Data.Total Annual Interest Rate&quot;, &quot;Data.Annual Interest Rate*&quot;, &quot;Data.Annual Interest Rate*†&quot;, &quot;Data.Annual Interest Rate (2)&quot;, &quot;Data.Annual Interest Rate (3)&quot;},Combiner.CombineTextByDelimiter(&quot;&quot;, QuoteStyle.None),&quot;Total Annual Interest Rate&quot;),&#13;&#10;    #&quot;Removed Columns1&quot; = Table.RemoveColumns(#&quot;Merged Columns3&quot;,{&quot;Data.Kind&quot;, &quot;Data.Name&quot;, &quot;Data.Children&quot;, &quot;Data.Text&quot;}),&#13;&#10;    #&quot;Reordered Columns&quot; = Table.ReorderColumns(#&quot;Removed Columns1&quot;,{&quot;Account Balance&quot;, &quot;Total Annual Interest Rate&quot;, &quot;Regular Interest Rate&quot;, &quot;Premium Interest Rate&quot;}),&#13;&#10;    #&quot;Reversed Rows&quot; = Table.ReverseRows(#&quot;Reordered Columns&quot;),&#13;&#10;    #&quot;Removed Top Rows&quot; = Table.Skip(#&quot;Reversed Rows&quot;,1),&#13;&#10;    #&quot;Replaced Value&quot; = Table.ReplaceValue(#&quot;Removed Top Rows&quot;,&quot;Not eligible&quot;,&quot;0&quot;,Replacer.ReplaceText,{&quot;Premium Interest Rate&quot;}),&#13;&#10;    #&quot;Replaced Value1&quot; = Table.ReplaceValue(#&quot;Replaced Value&quot;,&quot;N/A&quot;,&quot;0&quot;,Replacer.ReplaceText,{&quot;Premium Interest Rate&quot;}),&#13;&#10;    #&quot;Changed Type&quot; = Table.TransformColumnTypes(#&quot;Replaced Value1&quot;,{{&quot;Regular Interest Rate&quot;, Percentage.Type}, {&quot;Premium Interest Rate&quot;, Percentage.Type}, {&quot;Total Annual Interest Rate&quot;, Percentage.Type}})&#13;&#10;in&#13;&#10;    #&quot;Changed Type&quot;]]&gt;&lt;/Formula&gt;&lt;IsParameterQuery xsi:nil=&quot;true&quot; /&gt;&lt;IsDirectQuery xsi:nil=&quot;true&quot; /&gt;&lt;/Query&gt;&lt;/Items&gt;&lt;/Mashup&gt;</odc:PowerQueryMashupData>
 </odc:OfficeDataConnection>
</xml>
<style>
<!--
    .ODCDataSource
    {
    behavior: url(dataconn.htc);
    }
-->
</style>
 
</head>

<body onload='init()' scroll=no leftmargin=0 topmargin=0 rightmargin=0 style='border: 0px'>
<table style='border: solid 1px threedface; height: 100%; width: 100%' cellpadding=0 cellspacing=0 width='100%'> 
  <tr> 
    <td id=tdName style='font-family:arial; font-size:medium; padding: 3px; background-color: threedface'> 
      &nbsp; 
    </td> 
     <td id=tdTableDropdown style='padding: 3px; background-color: threedface; vertical-align: top; padding-bottom: 3px'>

      &nbsp; 
    </td> 
  </tr> 
  <tr> 
    <td id=tdDesc colspan='2' style='border-bottom: 1px threedshadow solid; font-family: Arial; font-size: 1pt; padding: 2px; background-color: threedface'>

      &nbsp; 
    </td> 
  </tr> 
  <tr> 
    <td colspan='2' style='height: 100%; padding-bottom: 4px; border-top: 1px threedhighlight solid;'> 
      <div id='pt' style='height: 100%' class='ODCDataSource'></div> 
    </td> 
  </tr> 
</table> 

  
<script language='javascript'> 

function init() { 
  var sName, sDescription; 
  var i, j; 
  
  try { 
    sName = unescape(location.href) 
  
    i = sName.lastIndexOf(".") 
    if (i>=0) { sName = sName.substring(1, i); } 
  
    i = sName.lastIndexOf("/") 
    if (i>=0) { sName = sName.substring(i+1, sName.length); } 

    document.title = sName; 
    document.getElementById("tdName").innerText = sName; 

    sDescription = document.getElementById("docprops").innerHTML; 
  
    i = sDescription.indexOf("escription>") 
    if (i>=0) { j = sDescription.indexOf("escription>", i + 11); } 

    if (i>=0 && j >= 0) { 
      j = sDescription.lastIndexOf("</", j); 

      if (j>=0) { 
          sDescription = sDescription.substring(i+11, j); 
        if (sDescription != "") { 
            document.getElementById("tdDesc").style.fontSize="x-small"; 
          document.getElementById("tdDesc").innerHTML = sDescription; 
          } 
        } 
      } 
    } 
  catch(e) { 

    } 
  } 
</script> 

</body> 
 
</html>
